MEDIA_TYPE = netboot image

TARGET = $(TEMP_INITRD) $(TEMP_KERNEL) kuroboxpro lschl lsgl lswsgl lswtgl mv2120 ts209 ts409
EXTRANAME = $(MEDIUM)/
TYPE = netboot/network-console

TEMP_INITRD_XZ = $(TEMP)/initrd.xz

$(TEMP_INITRD_XZ): $(TEMP_INITRD)
	zcat $(TEMP_INITRD) | xz --check=crc32 -9 > $(TEMP_INITRD_XZ)

# Buffalo Kurobox Pro
kuroboxpro: $(TEMP_INITRD_XZ)
	mkdir -p $(SOME_DEST)/$(EXTRANAME)buffalo/kuroboxpro
	cat $(TEMP_KERNEL) $(TEMP_DTBS)/orion5x-kuroboxpro.dtb > $(TEMP)/vmlinuz-kuroboxpro
	mkimage -A arm -O linux -T kernel -C none -a 0x01a00000 -e 0x01a00000 -n "Debian kernel" -d $(TEMP)/vmlinuz-kuroboxpro $(SOME_DEST)/$(EXTRANAME)buffalo/kuroboxpro/uImage.buffalo
	mkimage -A arm -O linux -T ramdisk -C gzip -a 0x0 -e 0x0 -n "debian-installer ramdisk" -d $(TEMP_INITRD_XZ) $(SOME_DEST)/$(EXTRANAME)buffalo/kuroboxpro/initrd.buffalo
	install -m 744 boot/arm/kuroboxpro-config-debian $(SOME_DEST)/$(EXTRANAME)buffalo/kuroboxpro/config-debian
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/kuroboxpro/config-debian "Script to run debian-installer"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/kuroboxpro/uImage.buffalo "Linux kernel for Kurobox Pro"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/kuroboxpro/initrd.buffalo "initrd for Kurobox Pro"

# Buffalo Linkstation Live V3 (LS-CHL)
lschl: kuroboxpro
	mkdir -p $(SOME_DEST)/$(EXTRANAME)buffalo/ls-chl
	mkdir -p $(TEMP)/ls-chl
	# Set machine id 2913 (0x0b61)
	devio > $(TEMP)/ls-chl/kernel 'wl 0xe3a01c0b,4' 'wl 0xe3811061,4'
	cat $(TEMP_KERNEL) >> $(TEMP)/ls-chl/kernel
	mkimage -A arm -O linux -T kernel -C none -a 0x01a00000 -e 0x01a00000 -n "Debian kernel" -d $(TEMP)/ls-chl/kernel $(SOME_DEST)/$(EXTRANAME)buffalo/ls-chl/uImage.buffalo
	ln -nfs ../kuroboxpro/initrd.buffalo $(SOME_DEST)/$(EXTRANAME)buffalo/ls-chl/
	install -m 744 boot/arm/linkstation-config-debian $(SOME_DEST)/$(EXTRANAME)buffalo/ls-chl/config-debian
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-chl/config-debian "Script to run debian-installer"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-chl/uImage.buffalo "Linux kernel for Linkstation Live V3"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-chl/initrd.buffalo "initrd for Linkstation Live V3"

# Buffalo Linkstation LS-WTGL
lswtgl: lschl
	mkdir -p $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wtgl
	cat $(TEMP_KERNEL) $(TEMP_DTBS)/orion5x-linkstation-lswtgl.dtb > $(TEMP)/vmlinuz-lswtgl
	mkimage -A arm -O linux -T kernel -C none -a 0x01a00000 -e 0x01a00000 -n "Debian kernel" -d $(TEMP)/vmlinuz-lswtgl $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wtgl/uImage.buffalo
	ln -nfs ../kuroboxpro/initrd.buffalo $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wtgl/
	ln -nfs ../ls-chl/config-debian $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wtgl/
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wtgl/config-debian "Script to run debian-installer"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wtgl/uImage.buffalo "Linux kernel for Linkstation LS-WTGL"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wtgl/initrd.buffalo "initrd for Linkstation LS-WTGL"

# Buffalo Linkstation Mini (LS-WSGL)
lswsgl: lschl
	mkdir -p $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wsgl
	cat $(TEMP_KERNEL) $(TEMP_DTBS)/orion5x-lswsgl.dtb > $(TEMP)/vmlinuz-lswsgl
	mkimage -A arm -O linux -T kernel -C none -a 0x01a00000 -e 0x01a00000 -n "Debian kernel" -d $(TEMP)/vmlinuz-lswsgl $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wsgl/uImage.buffalo
	ln -nfs ../kuroboxpro/initrd.buffalo $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wsgl/
	ln -nfs ../ls-chl/config-debian $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wsgl/
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wsgl/config-debian "Script to run debian-installer"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wsgl/uImage.buffalo "Linux kernel for Linkstation Mini (LS-WSGL)"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/ls-wsgl/initrd.buffalo "initrd for Linkstation Mini (LS-WSGL)"

# Buffalo Linkstation Pro/Live (LS-GL)
lsgl: lschl
	mkdir -p $(SOME_DEST)/$(EXTRANAME)buffalo/lspro_ls-gl
	cat $(TEMP_KERNEL) $(TEMP_DTBS)/orion5x-linkstation-lsgl.dtb > $(TEMP)/vmlinuz-lsgl
	mkimage -A arm -O linux -T kernel -C none -a 0x01a00000 -e 0x01a00000 -n "Debian kernel" -d $(TEMP)/vmlinuz-lsgl $(SOME_DEST)/$(EXTRANAME)buffalo/lspro_ls-gl/uImage.buffalo
	ln -nfs ../kuroboxpro/initrd.buffalo $(SOME_DEST)/$(EXTRANAME)buffalo/lspro_ls-gl/
	ln -nfs ../ls-chl/config-debian $(SOME_DEST)/$(EXTRANAME)buffalo/lspro_ls-gl/
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/lspro_ls-gl/config-debian "Script to run debian-installer"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/lspro_ls-gl/uImage.buffalo "Linux kernel for Linkstation Pro/Live (LS-GL)"
	update-manifest $(SOME_DEST)/$(EXTRANAME)buffalo/lspro_ls-gl/initrd.buffalo "initrd for Linkstation Pro/Live (LS-GL)"

# HP Media Vault mv2120
mv2120:
	mkdir -p $(SOME_DEST)/$(EXTRANAME)hp/mv2120
	mkdir -p $(TEMP)/mv2120
	# Set machine id 1693 (0x069d)
	devio > $(TEMP)/mv2120/kernel 'wl 0xe3a01c06,4' 'wl 0xe381109d,4'
	cat $(TEMP_KERNEL) >> $(TEMP)/mv2120/kernel
	mkimage -A arm -O linux -T kernel -C none -e 0x01000000 -a 0x01000000 -n "Debian kernel" -d $(TEMP)/mv2120/kernel $(TEMP)/mv2120/kernel.uboot
	util/pad $(TEMP)/mv2120/kernel.uboot 2097152 # 2 MB
	mkimage -A arm -O linux -T ramdisk -C none -n "Debian installer" -d $(TEMP_INITRD) $(TEMP)/mv2120/initrd.uboot
	cat $(TEMP)/mv2120/kernel.uboot $(TEMP)/mv2120/initrd.uboot > $(SOME_DEST)/$(EXTRANAME)hp/mv2120/netboot.img
	update-manifest $(SOME_DEST)/$(EXTRANAME)hp/mv2120/netboot.img "installer image for HP Media Vault mv2120/mv51x0"

# QNAP TS-109/TS-209
ts209: $(TEMP_INITRD_XZ)
	mkdir -p $(SOME_DEST)/$(EXTRANAME)qnap/ts-209
	mkdir -p $(TEMP)/ts-209
	echo "TS-109/TS-209" > $(SOME_DEST)/$(EXTRANAME)qnap/ts-209/model
	# Set machine id 1565 (0x061d)
	devio > $(TEMP)/ts-209/kernel 'wl 0xe3a01c06,4' 'wl 0xe381101d,4'
	cat $(TEMP_KERNEL) >> $(TEMP)/ts-209/kernel
	mkimage -A arm -O linux -T kernel -C none -a 0x00c08000 -e 0x00c08000 -n "Debian kernel" -d $(TEMP)/ts-209/kernel $(TEMP)/ts-209/kernel.uboot
	cp $(TEMP)/ts-209/kernel.uboot $(SOME_DEST)/$(EXTRANAME)qnap/ts-209/kernel
	cp $(TEMP_INITRD_XZ) $(SOME_DEST)/$(EXTRANAME)qnap/ts-209/initrd
	util/pad $(SOME_DEST)/$(EXTRANAME)qnap/ts-209/initrd 4194304
	install -m 744 boot/arm/qnap-flash-debian $(SOME_DEST)/$(EXTRANAME)qnap/ts-209/flash-debian
	update-manifest $(SOME_DEST)/$(EXTRANAME)qnap/ts-209/flash-debian "Script to flash debian-installer"
	update-manifest $(SOME_DEST)/$(EXTRANAME)qnap/ts-209/kernel "Linux kernel for QNAP TS-109/TS-209"
	update-manifest $(SOME_DEST)/$(EXTRANAME)qnap/ts-209/initrd "initrd for QNAP TS-109/TS-209"
	ln -s ts-209 $(SOME_DEST)/$(EXTRANAME)qnap/ts-109

# QNAP TS-409
ts409: $(TEMP_INITRD_XZ)
	mkdir -p $(SOME_DEST)/$(EXTRANAME)qnap/ts-409
	mkdir -p $(TEMP)/ts-409
	echo "TS-409" > $(SOME_DEST)/$(EXTRANAME)qnap/ts-409/model
	# Set machine id 1601 (0x0641)
	devio > $(TEMP)/ts-409/kernel 'wl 0xe3a01c06,4' 'wl 0xe3811041,4'
	cat $(TEMP_KERNEL) >> $(TEMP)/ts-409/kernel
	mkimage -A arm -O linux -T kernel -C none -a 0x00c08000 -e 0x00c08000 -n "Debian kernel" -d $(TEMP)/ts-409/kernel $(TEMP)/ts-409/kernel.uboot
	cp $(TEMP)/ts-409/kernel.uboot $(SOME_DEST)/$(EXTRANAME)qnap/ts-409/kernel
	cp $(TEMP_INITRD_XZ) $(SOME_DEST)/$(EXTRANAME)qnap/ts-409/initrd
	util/pad $(SOME_DEST)/$(EXTRANAME)qnap/ts-409/initrd 4194304
	install -m 744 boot/arm/qnap-flash-debian $(SOME_DEST)/$(EXTRANAME)qnap/ts-409/flash-debian
	update-manifest $(SOME_DEST)/$(EXTRANAME)qnap/ts-409/flash-debian "Script to flash debian-installer"
	update-manifest $(SOME_DEST)/$(EXTRANAME)qnap/ts-409/kernel "Linux kernel for QNAP TS-409"
	update-manifest $(SOME_DEST)/$(EXTRANAME)qnap/ts-409/initrd "initrd for QNAP TS-409"
